// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model USUARIO {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Many-to-many relation with WORKSPACE
  workspaces USUARIO_WORKSPACE[]
}

model WORKSPACE {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Many-to-many relation with USUARIO
  users       USUARIO_WORKSPACE[]
}

// Junction table to handle the many-to-many relationship between USUARIO and WORKSPACE
model USUARIO_WORKSPACE {
  usuario      USUARIO    @relation(fields: [usuarioId], references: [id])
  usuarioId    Int
  workspace    WORKSPACE  @relation(fields: [workspaceId], references: [id])
  workspaceId  Int
  role         WORKSPACE_ROLE @default(MEMBER)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([usuarioId, workspaceId])
  @@index([usuarioId])
  @@index([workspaceId])
}

enum WORKSPACE_ROLE {
  ADMIN
  MEMBER
}