// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Many-to-many relation with Workspace
  workspaces UsuarioWorkspace[]
}

model Workspace {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Many-to-many relation with Usuario
  users       UsuarioWorkspace[]
}

// Junction table to handle the many-to-many relationship between Usuario and Workspace
model UsuarioWorkspace {
  usuario      Usuario    @relation(fields: [usuarioId], references: [id])
  usuarioId    Int
  workspace    Workspace  @relation(fields: [workspaceId], references: [id])
  workspaceId  Int
  role         WorkspaceRole @default(MEMBER)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([usuarioId, workspaceId])
  @@index([usuarioId])
  @@index([workspaceId])
}

enum WorkspaceRole {
  ADMIN
  MEMBER
}